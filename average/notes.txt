//getting one word from uset input
#include <stdio.h>

int main() {
    char str[100];  // Declare a char array to store input

    printf("Enter a string: ");
    scanf("%s", str);  // Read a string from the user

    printf("You entered: %s\n", str);  // Output the string

    return 0;
}

//getting two,+ words from uset input
#include <stdio.h>

int main() {
    char str[100];  // Declare a char array with size 100

    printf("Enter a string: ");
    fgets(str, sizeof(str), stdin);  // Read a string from the user, including spaces

    printf("You entered: %s", str);  // Output the string

    return 0;
}

//notes for fgets
fgets() reads up to one less than the specified size (sizeof(str) in this case) and stores the input in the array, including spaces.

It adds a newline character (\n) at the end of the string when the user presses "Enter". If you don't want the newline character, you can remove it by manually replacing it with the null terminator ('\0').

// enter 2 values seperated by a space
#include <stdio.h>

int main() {
    char firstWord[50], secondWord[50];

    printf("Enter two words separated by a space: ");
    scanf("%s %s", firstWord, secondWord);  // Read two words separated by space

    printf("First word: %s\n", firstWord);
    printf("Second word: %s\n", secondWord);

    return 0;
}



//fgets() reads the entire input, including spaces, into the input array.

sscanf(input, "%s %s", firstWord, secondWord); extracts two space-separated words from the input string.

This method gives you more flexibility, like reading a longer input string or allowing further validation or manipulation of the input before processing.

#include <stdio.h>

int main() {
    char input[100], firstWord[50], secondWord[50];

    printf("Enter two words separated by a space: ");
    fgets(input, sizeof(input), stdin);  // Read the full input line

    // Extract two words from the input
    sscanf(input, "%s %s", firstWord, secondWord);

    printf("First word: %s\n", firstWord);
    printf("Second word: %s\n", secondWord);

    return 0;
}